{"ast":null,"code":"import _slicedToArray from \"C:/Users/vishal/Pictures/buffer/project_youtube/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    var mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, function (mode) {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  var value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  var _options$defaultMode = options.defaultMode,\n    defaultMode = _options$defaultMode === void 0 ? 'light' : _options$defaultMode,\n    defaultLightColorScheme = options.defaultLightColorScheme,\n    defaultDarkColorScheme = options.defaultDarkColorScheme,\n    _options$supportedCol = options.supportedColorSchemes,\n    supportedColorSchemes = _options$supportedCol === void 0 ? [] : _options$supportedCol,\n    _options$modeStorageK = options.modeStorageKey,\n    modeStorageKey = _options$modeStorageK === void 0 ? DEFAULT_MODE_STORAGE_KEY : _options$modeStorageK,\n    _options$colorSchemeS = options.colorSchemeStorageKey,\n    colorSchemeStorageKey = _options$colorSchemeS === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _options$colorSchemeS,\n    _options$storageWindo = options.storageWindow,\n    storageWindow = _options$storageWindo === void 0 ? typeof window === 'undefined' ? undefined : window : _options$storageWindo;\n  var joinedColorSchemes = supportedColorSchemes.join(',');\n  var _React$useState = React.useState(function () {\n      var initialMode = resolveValue(modeStorageKey, defaultMode);\n      return {\n        mode: initialMode,\n        systemMode: getSystemMode(initialMode),\n        lightColorScheme: resolveValue(\"\".concat(colorSchemeStorageKey, \"-light\")) || defaultLightColorScheme,\n        darkColorScheme: resolveValue(\"\".concat(colorSchemeStorageKey, \"-dark\")) || defaultDarkColorScheme\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  var colorScheme = getColorScheme(state);\n  var setMode = React.useCallback(function (mode) {\n    setState(function (currentState) {\n      var newMode = !mode ? defaultMode : mode;\n      if (mode === currentState.mode) {\n        return currentState;\n      }\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  var setColorScheme = React.useCallback(function (value) {\n    if (!value || typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(\"`\".concat(value, \"` does not exist in `theme.colorSchemes`.\"));\n      } else {\n        setState(function (currentState) {\n          var newState = _extends({}, currentState);\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n          processState(currentState, function (mode) {\n            localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-\").concat(mode), value);\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !joinedColorSchemes.includes(value.light) || value.dark && !joinedColorSchemes.includes(value.dark)) {\n      console.error(\"`\".concat(value, \"` does not exist in `theme.colorSchemes`.\"));\n    } else {\n      setState(function (currentState) {\n        var newState = _extends({}, currentState);\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n        return newState;\n      });\n      if (value.light) {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), value.light);\n      }\n      if (value.dark) {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), value.dark);\n      }\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  var handleMediaQuery = React.useCallback(function (e) {\n    if (state.mode === 'system') {\n      setState(function (currentState) {\n        return _extends({}, currentState, {\n          systemMode: e != null && e.matches ? 'dark' : 'light'\n        });\n      });\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  var mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(function () {\n    var handler = function handler() {\n      return mediaListener.current.apply(mediaListener, arguments);\n    }; // Always listen to System preference\n\n    var media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return function () {\n      return media.removeListener(handler);\n    };\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(function () {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n    processState(state, function (mode) {\n      if (mode === 'light') {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), state.lightColorScheme);\n      }\n      if (mode === 'dark') {\n        localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(function () {\n    var handleStorage = function handleStorage(event) {\n      var value = event.newValue;\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return function () {\n        return storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme: colorScheme,\n    setMode: setMode,\n    setColorScheme: setColorScheme\n  });\n}","map":{"version":3,"names":["_extends","React","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","getSystemMode","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","getColorScheme","lightColorScheme","darkColorScheme","resolveValue","key","defaultValue","value","localStorage","getItem","e","useCurrentColorScheme","options","_options$defaultMode","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","_options$supportedCol","supportedColorSchemes","_options$modeStorageK","modeStorageKey","_options$colorSchemeS","colorSchemeStorageKey","_options$storageWindo","storageWindow","joinedColorSchemes","join","_React$useState","useState","initialMode","concat","_React$useState2","_slicedToArray","setState","colorScheme","setMode","useCallback","currentState","newMode","setItem","setColorScheme","includes","console","error","newState","light","dark","handleMediaQuery","mediaListener","useRef","current","useEffect","handler","apply","arguments","media","addListener","removeListener","handleStorage","event","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"sources":["C:/Users/vishal/Pictures/buffer/project_youtube/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (mql.matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  }\n\n  return undefined;\n}\n\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n\n  return undefined;\n}\n\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n\n    return undefined;\n  });\n}\n\nfunction resolveValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  let value;\n\n  try {\n    value = localStorage.getItem(key) || undefined;\n  } catch (e) {// Unsupported\n  }\n\n  return value || defaultValue;\n}\n\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = resolveValue(modeStorageKey, defaultMode);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: resolveValue(`${colorSchemeStorageKey}-light`) || defaultLightColorScheme,\n      darkColorScheme: resolveValue(`${colorSchemeStorageKey}-dark`) || defaultDarkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      const newMode = !mode ? defaultMode : mode;\n\n      if (mode === currentState.mode) {\n        return currentState;\n      }\n\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(modeStorageKey, newMode);\n      }\n\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value || typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n\n          if (!value) {\n            // reset to default color scheme\n            newState.lightColorScheme = defaultLightColorScheme;\n            newState.darkColorScheme = defaultDarkColorScheme;\n            return newState;\n          }\n\n          processState(currentState, mode => {\n            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else if (value.light && !joinedColorSchemes.includes(value.light) || value.dark && !joinedColorSchemes.includes(value.dark)) {\n      console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n\n        if (value.light || value.light === null) {\n          newState.lightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        }\n\n        if (value.dark || value.dark === null) {\n          newState.darkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        }\n\n        return newState;\n      });\n\n      if (value.light) {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, value.light);\n      }\n\n      if (value.dark) {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, value.dark);\n      }\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => _extends({}, currentState, {\n        systemMode: e != null && e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args); // Always listen to System preference\n\n\n    const media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []); // Save mode, lightColorScheme & darkColorScheme to localStorage\n\n  React.useEffect(() => {\n    if (state.mode) {\n      localStorage.setItem(modeStorageKey, state.mode);\n    }\n\n    processState(state, mode => {\n      if (mode === 'light') {\n        localStorage.setItem(`${colorSchemeStorageKey}-light`, state.lightColorScheme);\n      }\n\n      if (mode === 'dark') {\n        localStorage.setItem(`${colorSchemeStorageKey}-dark`, state.darkColorScheme);\n      }\n    });\n  }, [state, colorSchemeStorageKey, modeStorageKey]); // Handle when localStorage has changed\n\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => storageWindow.removeEventListener('storage', handleStorage);\n    }\n\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}