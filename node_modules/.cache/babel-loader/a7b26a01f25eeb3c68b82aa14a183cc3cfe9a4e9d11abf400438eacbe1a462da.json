{"ast":null,"code":"import _slicedToArray from \"C:/Users/vishal/Pictures/buffer/project_youtube/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\nvar defaultOptionStringifier = function defaultOptionStringifier(option) {\n  var label = option.label,\n    value = option.value;\n  if (typeof label === 'string') {\n    return label;\n  }\n  if (typeof value === 'string') {\n    return value;\n  } // Fall back string representation\n\n  return String(option);\n};\nfunction useSelect(props) {\n  var buttonRefProp = props.buttonRef,\n    defaultValue = props.defaultValue,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    listboxId = props.listboxId,\n    listboxRefProp = props.listboxRef,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    _onChange = props.onChange,\n    onOpenChange = props.onOpenChange,\n    _props$open = props.open,\n    open = _props$open === void 0 ? false : _props$open,\n    options = props.options,\n    _props$optionStringif = props.optionStringifier,\n    optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n    valueProp = props.value;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var _useControlled = useControlled({\n      controlled: valueProp,\n      default: defaultValue,\n      name: 'SelectUnstyled',\n      state: 'value'\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    value = _useControlled2[0],\n    setValue = _useControlled2[1]; // prevents closing the listbox on keyUp right after opening it\n\n  var ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  var ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    listboxFocusRequested = _React$useState2[0],\n    requestListboxFocus = _React$useState2[1];\n  var focusListboxIfRequested = React.useCallback(function () {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n  var updateListboxRef = function updateListboxRef(listboxElement) {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n  var handleListboxRef = useForkRef(useForkRef(listboxRefProp, listboxRef), updateListboxRef);\n  React.useEffect(function () {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(function () {\n    requestListboxFocus(open);\n  }, [open]);\n  var createHandleMouseDown = function createHandleMouseDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous;\n      otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n      if (!event.defaultPrevented && open) {\n        ignoreClick.current = true;\n      }\n    };\n  };\n  var createHandleButtonClick = function createHandleButtonClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n      if (!event.defaultPrevented && !ignoreClick.current) {\n        onOpenChange == null ? void 0 : onOpenChange(!open);\n      }\n      ignoreClick.current = false;\n    };\n  };\n  var createHandleButtonKeyDown = function createHandleButtonKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.key === 'Enter') {\n        ignoreEnterKeyUp.current = true;\n      }\n      if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        onOpenChange == null ? void 0 : onOpenChange(true);\n      }\n    };\n  };\n  var createHandleListboxKeyUp = function createHandleListboxKeyUp(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyU;\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      var closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n      if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n        var _buttonRef$current;\n        buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n      ignoreEnterKeyUp.current = false;\n    };\n  };\n  var createHandleListboxItemClick = function createHandleListboxItemClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic2;\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (!multiple) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n  var createHandleListboxBlur = function createHandleListboxBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$blur;\n      otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n      if (!event.defaultPrevented) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n  var listboxReducer = function listboxReducer(state, action) {\n    var newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n    return newState;\n  };\n  var _useButton = useButton({\n      disabled: disabled,\n      ref: handleButtonRef\n    }),\n    getButtonRootProps = _useButton.getRootProps,\n    buttonActive = _useButton.active,\n    buttonFocusVisible = _useButton.focusVisible;\n  var selectedOption = React.useMemo(function () {\n    var _props$options$find;\n    return props.multiple ? props.options.filter(function (o) {\n      return value.includes(o.value);\n    }) : (_props$options$find = props.options.find(function (o) {\n      return o.value === value;\n    })) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  var useListboxParameters;\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled;\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: function onChange(newOptions) {\n        var newValues = newOptions.map(function (o) {\n          return o.value;\n        });\n        setValue(newValues);\n        _onChange == null ? void 0 : _onChange(newValues);\n      },\n      options: options,\n      optionStringifier: optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled2;\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: function onChange(option) {\n        var _option$value, _option$value2;\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        _onChange == null ? void 0 : _onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options: options,\n      optionStringifier: optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n  var _useListbox = useListbox(useListboxParameters),\n    getListboxRootProps = _useListbox.getRootProps,\n    getListboxOptionProps = _useListbox.getOptionProps,\n    getOptionState = _useListbox.getOptionState,\n    highlightedOption = _useListbox.highlightedOption,\n    listboxSelectedOption = _useListbox.selectedOption;\n  var getButtonProps = function getButtonProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n  var getListboxProps = function getListboxProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return getListboxRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleListboxBlur(otherHandlers),\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    }));\n  };\n  var getOptionProps = function getOptionProps(option) {\n    var otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption: highlightedOption,\n    open: open\n  });\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    disabled: disabled,\n    getButtonProps: getButtonProps,\n    getListboxProps: getListboxProps,\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    open: open,\n    value: value\n  };\n}\nexport default useSelect;","map":{"version":3,"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","useButton","useListbox","defaultListboxReducer","ActionTypes","defaultOptionStringifier","option","label","value","String","useSelect","props","buttonRefProp","buttonRef","defaultValue","_props$disabled","disabled","listboxId","listboxRefProp","listboxRef","_props$multiple","multiple","onChange","onOpenChange","_props$open","open","options","_props$optionStringif","optionStringifier","valueProp","useRef","handleButtonRef","_useControlled","controlled","default","name","state","_useControlled2","_slicedToArray","setValue","ignoreEnterKeyUp","ignoreClick","_React$useState","useState","_React$useState2","listboxFocusRequested","requestListboxFocus","focusListboxIfRequested","useCallback","current","focus","updateListboxRef","listboxElement","handleListboxRef","useEffect","createHandleMouseDown","otherHandlers","event","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current","createHandleListboxItemClick","_otherHandlers$onClic2","createHandleListboxBlur","_otherHandlers$blur","blur","listboxReducer","action","newState","type","keyDown","selectedValue","highlightedValue","optionsChange","_useButton","ref","getButtonRootProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","selectedOption","useMemo","_props$options$find","filter","o","find","useListboxParameters","id","isOptionDisabled","_o$disabled","optionComparer","v","newOptions","newValues","map","_o$disabled2","_option$value","_option$value2","stateReducer","_useListbox","getListboxRootProps","getListboxOptionProps","getOptionProps","getOptionState","highlightedOption","listboxSelectedOption","getButtonProps","arguments","length","undefined","getListboxProps","onBlur","useDebugValue"],"sources":["C:/Users/vishal/Pictures/buffer/project_youtube/node_modules/@mui/base/SelectUnstyled/useSelect.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\n\nconst defaultOptionStringifier = option => {\n  const {\n    label,\n    value\n  } = option;\n\n  if (typeof label === 'string') {\n    return label;\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  } // Fall back string representation\n\n\n  return String(option);\n};\n\nfunction useSelect(props) {\n  const {\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  const updateListboxRef = listboxElement => {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  const handleListboxRef = useForkRef(useForkRef(listboxRefProp, listboxRef), updateListboxRef);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$blur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: newOptions => {\n        const newValues = newOptions.map(o => o.value);\n        setValue(newValues);\n        onChange == null ? void 0 : onChange(newValues);\n      },\n      options,\n      optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: option => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChange == null ? void 0 : onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n\n  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleListboxBlur(otherHandlers),\n    onKeyUp: createHandleListboxKeyUp(otherHandlers)\n  }));\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption,\n    open\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}