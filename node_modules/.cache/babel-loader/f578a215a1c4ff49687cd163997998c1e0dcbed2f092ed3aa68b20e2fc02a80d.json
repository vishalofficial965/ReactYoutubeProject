{"ast":null,"code":"import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport var DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport var DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  var _ref = options || {},\n    _ref$enableColorSchem = _ref.enableColorScheme,\n    enableColorScheme = _ref$enableColorSchem === void 0 ? true : _ref$enableColorSchem,\n    _ref$enableSystem = _ref.enableSystem,\n    enableSystem = _ref$enableSystem === void 0 ? false : _ref$enableSystem,\n    _ref$defaultLightColo = _ref.defaultLightColorScheme,\n    defaultLightColorScheme = _ref$defaultLightColo === void 0 ? 'light' : _ref$defaultLightColo,\n    _ref$defaultDarkColor = _ref.defaultDarkColorScheme,\n    defaultDarkColorScheme = _ref$defaultDarkColor === void 0 ? 'dark' : _ref$defaultDarkColor,\n    _ref$modeStorageKey = _ref.modeStorageKey,\n    modeStorageKey = _ref$modeStorageKey === void 0 ? DEFAULT_MODE_STORAGE_KEY : _ref$modeStorageKey,\n    _ref$colorSchemeStora = _ref.colorSchemeStorageKey,\n    colorSchemeStorageKey = _ref$colorSchemeStora === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _ref$colorSchemeStora,\n    _ref$attribute = _ref.attribute,\n    attribute = _ref$attribute === void 0 ? DEFAULT_ATTRIBUTE : _ref$attribute,\n    _ref$colorSchemeNode = _ref.colorSchemeNode,\n    colorSchemeNode = _ref$colorSchemeNode === void 0 ? 'document.documentElement' : _ref$colorSchemeNode;\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: \"(function() { try {\\n        var mode = localStorage.getItem('\".concat(modeStorageKey, \"');\\n        var cssColorScheme = mode;\\n        var colorScheme = '';\\n        if (mode === 'system' || (!mode && !!\").concat(enableSystem, \")) {\\n          // handle system mode\\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\\n          if (mql.matches) {\\n            cssColorScheme = 'dark';\\n            colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-dark') || '\").concat(defaultDarkColorScheme, \"';\\n          } else {\\n            cssColorScheme = 'light';\\n            colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-light') || '\").concat(defaultLightColorScheme, \"';\\n          }\\n        }\\n        if (mode === 'light') {\\n          colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-light') || '\").concat(defaultLightColorScheme, \"';\\n        }\\n        if (mode === 'dark') {\\n          colorScheme = localStorage.getItem('\").concat(colorSchemeStorageKey, \"-dark') || '\").concat(defaultDarkColorScheme, \"';\\n        }\\n        if (colorScheme) {\\n          \").concat(colorSchemeNode, \".setAttribute('\").concat(attribute, \"', colorScheme);\\n        }\\n        if (\").concat(enableColorScheme, \" && !!cssColorScheme) {\\n          \").concat(colorSchemeNode, \".style.setProperty('color-scheme', cssColorScheme);\\n        }\\n      } catch (e) {} })();\")\n    }\n  });\n}","map":{"version":3,"names":["React","jsx","_jsx","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getInitColorSchemeScript","options","_ref","_ref$enableColorSchem","enableColorScheme","_ref$enableSystem","enableSystem","_ref$defaultLightColo","defaultLightColorScheme","_ref$defaultDarkColor","defaultDarkColorScheme","_ref$modeStorageKey","modeStorageKey","_ref$colorSchemeStora","colorSchemeStorageKey","_ref$attribute","attribute","_ref$colorSchemeNode","colorSchemeNode","dangerouslySetInnerHTML","__html","concat"],"sources":["C:/Users/vishal/Pictures/buffer/project_youtube/node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js"],"sourcesContent":["import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const {\n    enableColorScheme = true,\n    enableSystem = false,\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement'\n  } = options || {};\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}');\n        var cssColorScheme = mode;\n        var colorScheme = '';\n        if (mode === 'system' || (!mode && !!${enableSystem})) {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            cssColorScheme = 'dark';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            cssColorScheme = 'light';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);\n        }\n        if (${enableColorScheme} && !!cssColorScheme) {\n          ${colorSchemeNode}.style.setProperty('color-scheme', cssColorScheme);\n        }\n      } catch (e) {} })();`\n    }\n  });\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,IAAMC,wBAAwB,GAAG,MAAM;AAC9C,OAAO,IAAMC,gCAAgC,GAAG,cAAc;AAC9D,OAAO,IAAMC,iBAAiB,GAAG,mBAAmB;AACpD,eAAe,SAASC,wBAAwBA,CAACC,OAAO,EAAE;EACxD,IAAAC,IAAA,GASID,OAAO,IAAI,CAAC,CAAC;IAAAE,qBAAA,GAAAD,IAAA,CARfE,iBAAiB;IAAjBA,iBAAiB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IAAAE,iBAAA,GAAAH,IAAA,CACxBI,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,KAAK,GAAAA,iBAAA;IAAAE,qBAAA,GAAAL,IAAA,CACpBM,uBAAuB;IAAvBA,uBAAuB,GAAAD,qBAAA,cAAG,OAAO,GAAAA,qBAAA;IAAAE,qBAAA,GAAAP,IAAA,CACjCQ,sBAAsB;IAAtBA,sBAAsB,GAAAD,qBAAA,cAAG,MAAM,GAAAA,qBAAA;IAAAE,mBAAA,GAAAT,IAAA,CAC/BU,cAAc;IAAdA,cAAc,GAAAD,mBAAA,cAAGd,wBAAwB,GAAAc,mBAAA;IAAAE,qBAAA,GAAAX,IAAA,CACzCY,qBAAqB;IAArBA,qBAAqB,GAAAD,qBAAA,cAAGf,gCAAgC,GAAAe,qBAAA;IAAAE,cAAA,GAAAb,IAAA,CACxDc,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAGhB,iBAAiB,GAAAgB,cAAA;IAAAE,oBAAA,GAAAf,IAAA,CAC7BgB,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,0BAA0B,GAAAA,oBAAA;EAE9C,OAAO,aAAarB,IAAI,CAAC,QAAQ,EAAE;IACjC;IACAuB,uBAAuB,EAAE;MACvBC,MAAM,mEAAAC,MAAA,CAC+BT,cAAc,2HAAAS,MAAA,CAGVf,YAAY,yOAAAe,MAAA,CAKTP,qBAAqB,kBAAAO,MAAA,CAAeX,sBAAsB,qHAAAW,MAAA,CAG1DP,qBAAqB,mBAAAO,MAAA,CAAgBb,uBAAuB,iHAAAa,MAAA,CAI9DP,qBAAqB,mBAAAO,MAAA,CAAgBb,uBAAuB,mGAAAa,MAAA,CAG5DP,qBAAqB,kBAAAO,MAAA,CAAeX,sBAAsB,2DAAAW,MAAA,CAG9FH,eAAe,qBAAAG,MAAA,CAAkBL,SAAS,+CAAAK,MAAA,CAExCjB,iBAAiB,yCAAAiB,MAAA,CACnBH,eAAe;IAGvB;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}